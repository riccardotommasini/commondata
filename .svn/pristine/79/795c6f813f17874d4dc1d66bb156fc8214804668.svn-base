<!DOCTYPE html>
<html><head><title>GS for Product Matching and Product Extraction</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link rel="stylesheet" href="http://webdatacommons.org/style.css" type="text/css" media="screen"/>
<style>
.tar {
text-align: right;
}
.rtable
{
    float: right;
    padding-left:10px;

}
.smalltable, .smalltable TD, .smalltable TH
{
font-size:9pt;
}
.table-wrapper {
  position:relative;
}
.table-scroll {
  height:240px;
  overflow:auto;
  margin-top:-10px;
}

.show{
  display:block;
}

.no-show{
  display:none;
}

hr {
    width: 50%;
    margin: 20px 0; /* This leaves 10px margin on left and right. If only right margin is needed try margin-right: 10px; */
}
</style>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript" src="scripts/gcharts.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script type="text/javascript" src="../jquery.toc.min.js"></script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-30248817-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<script type="application/ld+json">
{
  "@context":"http://schema.org/",
  "@type":"Dataset",
  "name":"Web Data Commons - Product Corpus",
  "description":"Generating a Product Data Catalog out of the Web. The crawler was forced to retrieve data from 32 different PLDs which were chosen based on their containment of marked up annotations as well as their traffic rankings as reported by Alexa",
  "url":"http://webdatacommons.org/productcorpus/index.html",
  "keywords":[
     "product corpus"
  ],
  "creator":[
	  {
		 "@type":"Person",
		 "url": "http://dws.informatik.uni-mannheim.de/en/people/professors/prof-dr-christian-bizer/",
		 "name":"Christian Bizer"
	  },
	  {
		 "@type":"Person",
		 "url": "http://dws.informatik.uni-mannheim.de/en/people/researchers/robert-meusel/",
		 "name":"Robert Meusel"
	  },
	  {
		 "@type":"Person",
		 "url": "http://dws.informatik.uni-mannheim.de/en/people/researchers/petar-petrovski/",
		 "name":"Petar Petrovski"
	  },
	  {
		 "@type":"Person",
		 "url": "http://dws.informatik.uni-mannheim.de/en/people/researchers/anna-primpeli/",
		 "name":"Anna Primpeli"
	  }

  ],
  "distribution":[
     {
        "@type":"DataDownload",
        "fileFormat":[
			"warc",
			"n-quads"
		],
        "contentUrl":"http://data.dws.informatik.uni-mannheim.de/productcrawl/crawl-data-general/"
     }
  ],
  "citation":[
	  "Petar Petrovski, Anna Primpeli, Robert Meusel, Christian Bizer: Product Data Corpus and Gold Standard for Product Feature Extraction and Matching. 17th International Conference on Electronic Commerce and Web Technologies, Porto, Portugal, September 2016.",
	  "Robert Meusel, Anna Primpeli, Christian Meilicke, Heiko Paulheim, Christian Bizer: Exploiting Microdata Annotations to Consistently Categorize Product Offers at Web Scale. 16th International Conference on Electronic Commerce and Web Technologies"
  ]
  }
</script>

</head>
<body>
  <div id="logo" style="text-align:right; background-color: white;">&nbsp;&nbsp;<a href="http://dws.informatik.uni-mannheim.de"><img src="../images/ma-logo.gif" alt="University of Mannheim - Logo"></a></div>
  <div id="header">
    <h1 style="font-size: 250%;">Web Data Commons - Gold Standard for Product Matching and Product Feature Extraction</h1>
  </div>
  <div id="tagline">Generating a Product Data Catalog out of the Web</div>
  <div id="authors">
    <a href="http://dws.informatik.uni-mannheim.de/en/people/researchers/petar-petrovski/">Petar Petrovski</a><br />
    <a href="">Anna Primpeli</a><br />
    <a href="http://dws.informatik.uni-mannheim.de/en/people/researchers/robert-meusel/">Robert Meusel</a><br />
    <a href="http://dws.informatik.uni-mannheim.de/en/people/professors/prof-dr-christian-bizer/">Christian Bizer</a><br />
  </div>
  <div id="content">
	   <p>
       In order to support the evaluation and comparison of product feature extraction and product matching methods,
       we have manually created two public  gold standards
       for these tasks. The gold standards comprise of several hundreds products from the categories mobile phones, TVs, and headphones.
	  </p>
	  <h2 id="news">News</h2>
	  <ul>
	  <li>
		<strong>2018-12-20: We have released the <a href="http://webdatacommons.org/largescaleproductcorpus/index.html">WDC Training Dataset and Gold Standard for Large-Scale Product Matching</a> consisting of 26 million product offers originating from 79 thousand websites. </strong>
       </li>
	  <li>
		<strong>2017-30-06: Paper about extracting attribute-value pairs from product specifications accepted at at <a href="http://webintelligence2017.com/">WI'17</a> conference in Leipzig, Germany: <a href="paper/attribute_value_pair_extraction_from_specification.pdf" target="_blank"> Extracting Attribute-Value Pairs from Product Specifications on the Web</a></strong>
       </li>
      <li>
		<strong>2016-01-09: Paper about the gold standards accepted at <a href="http://www.dexa.org/ecweb2016">EC-WEB'16</a> conference in Porto, Portugal: <a href="paper/WDC-EC_GS.pdf" target="_blank"> The WDC Gold Standards for Product Feature Extraction and Product Matching</a></strong>
      </li>
	  </ul>
	  <h2>Contents</h2>
	  <ul>
		    <li class="toc-h2 toc-active">
		        <a href="#toc1"> 1.About the WDC gold standard for product matching and product feature extraction </a>
		    </li>
			<li class="toc-h2 toc-active">
		        <a href="#toc2"> 2.Product Selection </a>
		    </li>
		    <li class="toc-h2 toc-active">
		        <a href="#toc3"> 3.Gold Standard for Feature Extraction</a>
		    </li>
		    <li class="toc-h2 toc-active">
		        <a href="#toc4"> 4.Gold Standard for Product Matching </a>
		    </li>
        <li class="toc-h2 toc-active">
		        <a href="#toc5"> 5.Product Data Corpus </a>
		    </li>
		    <li class="toc-h2 toc-active">
		        <a href="#toc6"> 6.Baselines </a>
		    </li>
			<li class="toc-h2 toc-active">
		        <a href="#toc7"> 7.Extraction of Attribute-Value Pairs from Product Specifications</a>
		    </li>
		    <li class="toc-h2 toc-active">
		        <a href="#toc8"> 8.References </a>
		    </li>
	  </ul>

    <span id="toc1"></span>
    <h2>1. About the WDC Gold Standard for Product Matching and Product Feature Extraction </h2>
    <p>
      Finding out which e-shops offer a specific product is a central challenge for building integrated product catalogs and comparison shopping  portals.
      Determining whether two offers refer to the same product  involves extracting a set of features (product attributes) from the web pages containing the offers and comparing these features using a matching  function.
      The existing gold standards [5, 6] for product matching have two shortcomings:
      (i) they only contain offers from a small number of e-shops  and thus do not properly cover the heterogeneity that is found on the  Web.
      (ii) they only provide a small number of generic product attributes  and therefore cannot be used to evaluate whether detailed product attributes have been correctly extracted from textual product descriptions.
    </p>
    <p>
      To overcome above shortcomings we introduce the WDC gold standard for product matching and product featrue extraction, which packages the following artifacts:
      <ul>
        <li>
          <strong>Goldstandard for Product Feature Extraction:</strong> containing over 500 deeply annotated product web pages. On each web page the product-specific features are annotated.
        </li>
        <li>
          <strong>Goldstandard for Product Matching:</strong> containing over 75,000 correspondences (1,500 positive, and 73,500 negative) between products from the product catalog and products described on web pages.
        </li>
      </ul>
    </p>
    <p>
      In addition, we also provide a <strong>Product Data Corpus</strong> for public download
      containing over 13 million product-related web pages retrieved from the same 32 websites.
      This corpus might be useful as background  knowledge for
      the semi-supervised training of feature extraction and matching methods.
    </p>
    <span id="toc2"></span>
    <h2>2. Product Selection</h2>
	<p>
     We have used the 32 most frequently visited shopping <a href="#toc5">web sites</a> based on the ranking provided by <a href="http://www.alexa.com" target="_blank">Alexa</a>. We collected first the ten most popular products from the different web sites, for each of the three chosen product categories. We further complemented this list by similar products (based on their name). As example, we found the product Apple iPhone 6 64GB to be one of the most popular amongst all shopping web sites. We therefore included also the products Apple iPhone 6 128GB as well as Apple iPhone 5 into our product catalog. Especially for the product matching task, this methodology introduces a certain level of complexity, as the product names only differ by one or two characters. All in all, for each product category we selected 50 different products.
    </p>
    <span id="toc3"></span>
    <h2>3. Gold Standard for Feature Extraction</h2>
    <p>
      We labed 4 distinct stuctural units from the HTML pages: (1) Microdata title, (2) Microdata description, (3) HTML tables and (4) HTML lists. The labeled set comprises out of 500 product entities, while the distinct labeled properties are 338 in total. It was created by three different annotators. In order to ensure the validity of the annotaton process, the inter annotator agreement was calculated. Out of 1,500 labeled properties there were found 75 disagreements. Therefore, the inter annotator agreement is estimated to be 95%. The table below shows the distribution of labeled entities per category. The product entities were labeled as JSON objects for which a documentation of propety meaning and usage is available <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-fextraction-gold-standard/README">here.</a> Additionally, the files containing the labeled entities are provided per category and in total for further use.
    </p>
    <table>
      <tr><th>Category</th><th>#labeled Products</th><th>File with labeled Products</th><tr>
      <tr><td>Headphones</td><td>124</td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-fextraction-gold-standard/data/headphones_labelled_entities.json">headphones_labeled_entities.json</a>(230kb)</td></tr>
      <tr><td>Mobile Phones</td><td>212</td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-fextraction-gold-standard/data/phones_labelled_entities.json">phones_labeled_entities.json</a>(603kb)</td></tr>
      <tr><td>Televisions</td><td>164</td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-fextraction-gold-standard/data/tvs_labelled_entities.json">tvs_labeled_entities.json</a>(291kb)</td></tr>
      <tr><td>Total</td><td>500</td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-fextraction-gold-standard/data/all_labelled_entities.json">all_labeled_entities.json</a>(1,125kb)</td></tr>
    </table>
    <h4> General statistics per PLD, Web Page and Totals for each category </h4>
    <hr/>
    <div id="intro_pld" class="show"> <a id="link_pld" href="">Statistics per PLD are available by clicking here.</a></div>
    <div id="charts_pld" class="no-show">
	  <a id="colapse_pld" href="">Colapse...</a> <br />
      <p>
        The charts below show the PLD usage for the top 12 most used properties in the gold standard for each product category.
        Some more detailed statistics on all the properties before being mapped can be found in the following <a target="_blank" href="files/UnMappedProps_Statistics.xlsx">file (UnMappedProps_Statistics.xlsx)</a>. The file includes the feature names of tables and lists
        and their frequency per product category as used by the different commercial websites as well as the distribution of PLDs to the feature names per product category.
      </p>
      <div>
        <div id="headphones_pld" style="display:inline-block"></div>
        <div id="phones_pld" style="display:inline-block"></div>
        <div id="tvs_pld" style="display:inline-block"></div>
      </div>
    </div>
    <hr/>
    <div id="intro_structure" class="show">
      <a id="link_structure" href="">Statistics about product attributes withing tables and lists per web page are available by clicking here.</a>
    </div>
    <div id="charts_structure" class="no-show">
		<a id="colapse_structure" href="">Colapse...</a> <br />
	     <p>The charts below show the usage of attributes per product per product category within lists and tables.</p>
	      <div>
      		<div id="headphones_tables" style="display:inline-block"></div>
      		<div id="phones_tables" style="display:inline-block"></div>
      		<div id="tvs_tables" style="display:inline-block"></div>
      	</div>
      	<div>
      		<div id="headphones_lists" style="display:inline-block"></div>
      		<div id="phones_lists" style="display:inline-block"></div>
      		<div id="tvs_lists" style="display:inline-block"></div>
      	</div>
    </div>
    <hr/>
    <div id="intro_totals" class="show">
      <a id="link_totals" href="">Statistics on total number of properties lalbeled are available by click here.</a>
    </div>

    <div id="charts_totals" class="no-show">
	  <a id="colapse_totals" href="">Colapse...</a> <br />
      <p>Among the total number of defined properties we observed some that were used rather frequently and others that were used only from a few
      websites. The charts below present the most frequent properties per product category as found in titles, descriptions, tables and lists.
      Please note that the presented results do not include the tagline property which is used for the cases where a word in a title or description did not reveal any specification
      and thus could not be given any property value.</p>
      <table >
      <tr>
      <td><div id="phones_Title" style="float:left"></div></td>
      <td><div id="headphones_Title" style="float:left"></div></td>
      <td><div id="tvs_Titles" style="float:left"></div></td>
      </tr>
      <tr>
      <td><div id="phones_Desc" style="float:left"></div></td>
      <td><div id="headphones_Desc" style="float:left"></div></td>
      <td><div id="tvs_Desc" style="float:left"></div></td>
      </tr>
      <tr>
      <td><div id="phones_Tables" style="float:left"/></td>
      <td><div id="headphones_Tables" style="float:left"/></td>
      <td><div id="tvs_Tables" style="float:left"/></td>
      </tr>
      <tr>
      <td><div id="phones_Lists" style="float:left"></div></td>
      <td><div id="headphones_Lists" style="float:left"></div></td>
      <td><div id="tvs_Lists" style="float:left"></div></td>
      </tr>
      </table>
    </div>
    <hr/>
    <span id="toc4"></span>
    <h2>4. Gold Standard for Product Matching</h2>

	<h3>Product Catalog</h3>
    <p>
      Feature Enrichment: In order to complement the products with features, for each of the 150 products in our product catalog we obtained product-specific features from the manufacturers’ web site or, from shopping service web sites like Google Shopping. We did not extract features from individual vendor web site, like Amazon as we want to focus on product-specific features, rather than on features arising from bundles offered by specific vendors.
    </p>
    <p>
      Figure 1 shows two example pages, which we used to manually extract the features for our product catalog. Figure 1left) depicts the page of Google Shopping and Figure 1right) from the manufacturers’ web site.
    </p>
    <figure>
      <img src="files/images/shopping.png" width="500"/>
      <img src="files/images/vendor.png" width="500"/>
      <figcaption>Figure 1: left) Features annotated by Google Shopping and right) Features annotated by the Manufacturer
    </figure>
    <p>The table below shows the scraped attributes per product category.</p>
    <h4>Defined Properties per Product Category</h4>
    </br>
    <table>
      <tr><th>Category</th><th>#Properties</th><th>List of Properties</th><th>Downloads</th></tr>
      <tr><th>Headphones</th><td>36</td><td><small><a href='' onclick="document.getElementById('headphoneProps').style.display='block';this.style.display='none';return false;">Show Properties for Headphones </a></small>
        <ol id='headphoneProps' style='display:none'>
		<li>product_name (key attribute)</li>
          <li>description</li>
          <li>product_type</li>
          <li>width</li>
          <li>depth</li>
          <li>height</li>
          <li>compatibility</li>
          <li>series</li>
          <li>weight</li>
          <li>color</li>
          <li>headphones_form_factor</li>
          <li>headphones_cup_type</li>
          <li>foldable</li>
          <li>microphone</li>
          <li>microphone_sensitivity</li>
          <li>microphone_response</li>
          <li>microphone_audio_details</li>
          <li>headphones_technology</li>
          <li>connectivity_technology</li>
          <li>sound_output_mode</li>
          <li>frequency_response</li>
          <li>max_input_power</li>
          <li>sensitivity</li>
          <li>thd</li>
          <li>impedance</li>
          <li>diaphragm</li>
          <li>magnet_material</li>
          <li>detachable_cable</li>
          <li>controls</li>
          <li>cables_included</li>
          <li>included_accessories</li>
          <li>compliant_standards</li>
          <li>warranty</li>
          <li>brand</li>
          <li>mpn</li>
          <li>product_gtin</li>
          <li>aditional_features</li>
        </ol></td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/product-catalog/HeadphoneCatalog.json">HeadphoneCatalog.json</a>(22kb)</td>
      </tr>
      <tr><th>Mobile Phones</th><td>32</td><td><small><a href='' onclick="document.getElementById('phoneProps').style.display='block';this.style.display='none';return false;">Show Properties for Mobile Phones </a></small>
        <ol id='phoneProps' style='display:none'>
		<li>product_name (key attribute)</li>
          <li>description</li>
          <li>ram</li>
          <li>water_resistance</li>
          <li>memory</li>
          <li>brand</li>
          <li>phone_type</li>
          <li>computer_operating_system</li>
          <li>phone_carrier</li>
          <li>product_type</li>
          <li>core_count</li>
          <li>processor_type</li>
          <li>rear_cam_resolution</li>
          <li>front_cam_resolution</li>
          <li>color</li>
          <li>wattage</li>
          <li>power_supply</li>
          <li>display_size</li>
          <li>display_resolution</li>
          <li>voltage</li>
          <li>mpn</li>
          <li>modelnum</li>
          <li>width</li>
          <li>height</li>
          <li>depth</li>
          <li>weight</li>
          <li>dimensions</li>
          <li>body_material</li>
          <li>package_height</li>
          <li>product_code</li>
          <li>product_gtin</li>
          <li>manufacturer</li>
        </ol></td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/product-catalog/PhoneCatalog.json">PhoneCatalog.json</a>(38kb)</td>
      </tr>
      <tr><th>Televisions</th><td>76</td><td><small><a href='' onclick="document.getElementById('tvProps').style.display='block';this.style.display='none';return false;">Show Properties for Televisions </a></small>
        <ol id='tvProps' style='display:none'>
		<li>product_name (key attribute)</li>
          <li>description</li>
          <li>compatible_channels</li>
          <li>product_type</li>
          <li>wattage_operational</li>
          <li>yearly_consumption</li>
          <li>viewable_size</li>
          <li>total_size</li>
          <li>3d_technology</li>
          <li>series</li>
          <li>computer_operating_system</li>
          <li>tv_tuner</li>
          <li>builtin_dvd_player</li>
          <li>video_interface</li>
          <li>hdmi_ports</li>
          <li>pc_interface</li>
          <li>hdcp_compatability</li>
          <li>timer_functions</li>
          <li>stand</li>
          <li>width</li>
          <li>depth</li>
          <li>height</li>
          <li>weight</li>
          <li>color</li>
          <li>display_resolution</li>
          <li>display_type</li>
          <li>image_aspect_ratio</li>
          <li>motion_enhancement_technology</li>
          <li>refresh_rate</li>
          <li>24p_technology</li>
          <li>backlight_technology</li>
          <li>image_contrast</li>
          <li>brightness</li>
          <li>widescreen_modes</li>
          <li>viewing_angle</li>
          <li>response_time</li>
          <li>supported_languages</li>
          <li>commercial_features</li>
          <li>stand_design</li>
          <li>stand_color</li>
          <li>analog_tv_tuner</li>
          <li>stereo_reception _system</li>
          <li>secondary_audio_program</li>
          <li>digital_tv_tuner</li>
          <li>input_video_formats</li>
          <li>supported_computer_resolution</li>
          <li>channel_lock</li>
          <li>closed_caption_capability</li>
          <li>supported_memory_cards</li>
          <li>supported_video_formats</li>
          <li>supported_audio_formats</li>
          <li>supported_picture_formats</li>
          <li>usb_ports</li>
          <li>memory</li>
          <li>remote_control_model</li>
          <li>digital_audio_format</li>
          <li>audio_surround</li>
          <li>speakers_qty</li>
          <li>speakers_type</li>
          <li>connectivity</li>
          <li>wifi_protocol</li>
          <li>internet_services</li>
          <li>dlna</li>
          <li>batteries_included</li>
          <li>voltage</li>
          <li>wattage_standby</li>
          <li>warranty</li>
          <li>dimensions_with_stand</li>
          <li>dimensions_without_stand</li>
          <li>package_width</li>
          <li>package_depth</li>
          <li>package_height</li>
          <li>package_weight</li>
          <li>brand</li>
          <li>mpn</li>
          <li>product_gtin</li>
        </ol></td><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/product-catalog/TVCatalog.json">TVCatalog.json</a>(38kb)</td>
      </tr>
    </table>

	<h3>Correspondences</h3>

    <p>
      We manually generated 1,500 positive correspondences, 500 for each product category (the data are available <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/">here</a>).
      For each product of the product catalog at least one positive correspondence is included.
      Additionally, to make the matching task more realistic the annotators also annotate closely
      related products to the once in the product catalog like: phone cases,
      TV wall mounts or headphone cables, ear-buds, etc. Furthermore we created additional
      negative correspondences exploiting transitive closure. As all products in the product catalog are distinct,
      we can generate for all product descriptions contained in web pages,
      where a positive correspondence exist to a product in the catalog,
      for all other products in the catalog a negative correspondence to this product on the web page.
      Using the two approaches we ended up with 73,500 negative correspondences. Please note that the properties <i> product_name</i> from the product catalogs and <i> normalized product name </i>
	  can only be used as keys and not as extracted attributes.
	  The full list of correspondences can be downloaded <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/correspondences/">here</a>.
    </p>
    <p>
      Figure 2 depicts the number of positive correspondences
      which are contained for each product from the three different product categories.
    </p>
    <figure>
      <img src="files/images/duplicateDist.png" width="600"/>
      <figcaption>Figure 2: Distribution of correspondeces per product category
    </figure>

	<h3>Download Page Subset</h3>
	<p>
		We also provide the pages icluded in the gold standard for <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/pages/">download.</a> Each page is named by the id of each product given in the data.
	</p>


    <span id="toc5"></span>
    <h2>5. Product Data Corpus</h2>
    <p>
      The motivation for the product crawl follow two main criteria: the diversity of its origin and its quantity.
      This means that the chosen product specifications derive from different websites which use different schemata
      to express product specifications for the same product category. Furthermore the data should include
      a comprehensive amount of the products and offers provided by the selected websites.
    </p>
    <p>
  		The approach adapted for crawling data while satisfying the previous criteria is the crawling and scraping
  		framework, <a href="https://github.com/scrapy/scrapy"><i>scrapy</i></a>. The crawler was forced to retrieve data from 32 different PLDs which were chosen based on their containment of marked up
  		annotations as well as their traffic rankings as reported by <a href="http://alexa.com"><i>Alexa</i></a>. The following table shows the distribution
  		of pages included in the crawler per PLD.
		</p>
    <h4>Number of Pages per PLD in the Crawled Corpus</h4>
		</br>
		<table id="pagesPerPLD">
			<tr><th>PLD</th><td>#Pages</td><th>PLD</th><td>#Pages</td></tr>
			<tr><th>target.com</th><td>2,007,121</td>
			<th>shop.com</th><td>1,754,368</td></tr>
			<tr><th>walmart.com</th><td>1,711,517</td>
			<th>selection.alibaba.com</th><td>607,410</td></tr>
			<tr><th>microcenter.com</th><td>459,921</td>
			<th>aliexpress.com</th><td>431,005</td></tr>
			<tr><th>ebay.com</th><td>413,144</td>
			<th>macmall.com</th><td>401,944</td></tr>
			<tr><th>apple.com</th><td>391,539</td>
			<th>bestbuy.com</th><td>389,146</td></tr>
			<tr><th>techspot.com</th><td>386,273</td>
			<th>techforless.com</th><td>361,234</td></tr>
			<tr><th>overstock.com</th><td>347,846</td>
			<th>searsoutlet.com</th><td>341,924</td></tr>
			<tr><th>pcrush.com</th><td>292,904</td>
			<th>tesco.com</th><td>222,802</td></tr>
			<tr><th>frontierpc.com</th><td>187,184</td>
			<th>abt.com</th><td>115,539</td></tr>
			<tr><th>ipkart.com</th><td>63,112</td>
			<th>conns.com</th><td>61,158</td></tr>
			<tr><th>costco.com</th><td>54,274</td>
			<th>dhgate.com</th><td>50,099</td></tr>
			<tr><th>shop.lenovo.com</th><td>41,465</td>
			<th>bjs.com</th><td>40,930</td></tr>
			<tr><th>newegg.com</th><td>37,393</td>
			<th>microsoftstore.com</th><td>24,163</td></tr>
			<tr><th>samsclub.com</th><td>22,788</td>
			<th>tomtop.com</th><td>13,306</td></tr>
			<tr><th>alibaba.com</th><td>7,136</td>
			<th>boostmobile.com</th><td>2,487</td></tr>
			<tr><th>sears.com</th><td>659</td>
			<th>membershipwireless.com</th><td>457</td></tr>
		</table>
		<p>
		In order to restrict the obtained results, product categories and a list of 10 products per category were specified.
		The table shows the distribution of the retrieved pages after the implementation of the above mentioned filters.
		</p>
		<br/>
		<h4>Number of Pages per Product Category</h4>
		<br/>
		<table id="pagesPerCategory">
			<tr><th>Category</th><td>#Pages</td></tr>
			<tr><th>Headphones</th><td>355,648</td></tr>
			<tr><th>Mobile Phones</th><td>1,246,213</td></tr>
			<tr><th>Televisions</th><td>556,121</td></tr>
		</table>
		<h3>Markup Data of the Crawled Corpus</h3>
		<p>
		It has been shown that markup data like <a href="../structureddata/index.html">Microdata and RDFa</a> are becoming the standrad for embedding varios semantics of data items.
		For the purpose of exploiting the Microdata markup in this couprus, the data derived from the crawl were profiled on the basis of markup data. The following table gives an overview about the top domains, classes and properties
		as observed in the markup entities of the crawled corpus.
		</p>
		<div>
			<h4>Statistics on the Markup Data of the Crawled Corpus</h4>
			</br>
			<table id="stats_corpus">
				<tr><th> Distinct PLDs with markup data </th><td>29</td></tr>
				<tr><th> Total Triples  </th><td>26,184,401</td></tr>
				<tr><th> Total Entities </th><td>5,636,972</td></tr>
				<tr><th> Top Domains by Extracted Triples </th>
					<td><small><a href='' onclick="document.getElementById('ed09e999-0997-428b-aaa8-0043c084bc03').style.display='block';this.style.display='none';return false;">Show top values</a></small>
						<ol id='ed09e999-0997-428b-aaa8-0043c084bc03' style='display:none'>
						<li><a rel='nofollow' target='_blank' href='http://overstock.com'>overstock.com</a>(10,363,461 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://walmart.com'>walmart.com</a>(4,871,779 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://aliexpress.com'>aliexpress.com</a>(3,923,894 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://ebay.com'>ebay.com</a>(1,987,617 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://tesco.com'>tesco.com</a>(1,380,686 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://bestbuy.com'>bestbuy.com</a>(809,371 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://shop.com'>shop.com</a>(696,471 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://searsoutlet.com'>searsoutlet.com</a>(525,216 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://samsclub.com'>samsclub.com</a>(278,791 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://alibaba.com'>alibaba.com</a>(240,143 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://microcenter.com'>microcenter.com</a>(235,147 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://bjs.com'>bjs.com</a>(228,063 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://dhgate.com'>dhgate.com</a>(139,856 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://flipkart.com'>flipkart.com</a>(98,069 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://newegg.com'>newegg.com</a>(94,945 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://macmall.com'>macmall.com</a>(83,127 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://abt.com'>abt.com</a>(55,740 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://techspot.com'>techspot.com</a>(47,533 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://conns.com'>conns.com</a>(34,416 triples) </li>
						<li><a rel='nofollow' target='_blank' href='http://apple.com'>apple.com</a>(21,726 triples) </li>
				</ol></td></tr>
				<tr><th> Top Classes by Entities </th>
					<td><small><a href='' onclick="document.getElementById('classesByEntities').style.display='block';this.style.display='none';return false;">Show top values</a></small>
						<ol id='classesByEntities' style='display:none'>
						<li> <abbr title='http://schema.org/Product '>schema:Product</abbr> (1,123,437 Entities) </li>
						<li> <abbr title='http://schema.org/Offer '>schema:Offer</abbr> (939,099 Entities) </li>
						<li> <abbr title='http://schema.org/AggregateRating '>schema:AggregateRating</abbr> (783,860 Entities) </li>
						<li> <abbr title='http://schema.org/Review '>schema:Review</abbr> (614,110 Entities) </li>
						<li> <abbr title='http://schema.org/Rating '>schema:Rating</abbr> (578,198 Entities) </li>
						<li> <abbr title='http://data-vocabulary.org/Breadcrumb '>data-vocabulary.org/Breadcrumb</abbr> (527,215 Entities) </li>
						<li> <abbr title='http://schema.org/SomeProducts '>schema:SomeProducts</abbr> (386,745 Entities) </li>
						<li> <abbr title='http://schema.org/Organization '>schema:Organization</abbr> (205,228 Entities) </li>
						<li> <abbr title='http://schema.org/ListItem '>schema:ListItem</abbr> (143,448 Entities) </li>
						<li> <abbr title='http://schema.org/BreadcrumbList '>schema:BreadcrumbList</abbr> (92,029 Entities) </li>
						<li> <abbr title='http://schema.org/Brand '>schema:Brand</abbr> (54,564 Entities) </li>
						<li> <abbr title='http://schema.org/WebPage '>schema:WebPage</abbr> (45,328 Entities) </li>
						<li> <abbr title='http://schema.org/AggregateOffer '>schema:AggregateOffer</abbr> (37,760 Entities) </li>
						<li> <abbr title='http://schema.org/SearchAction '>schema:SearchAction</abbr> (36,577 Entities) </li>
						<li> <abbr title='http://schema.org/aggregateRating '>schema:aggregateRating</abbr> (24,531 Entities) </li>
						<li> <abbr title='http://schema.org/SearchResultsPage '>schema:SearchResultsPage</abbr> (15,801 Entities) </li>
						<li> <abbr title='http://schema.org/WPFooter '>schema:WPFooter</abbr> (5,491 Entities) </li>
						<li> <abbr title='http://schema.org/WPHeader '>schema:WPHeader</abbr> (5,491 Entities) </li>
						<li> <abbr title='http://data-vocabulary.org/Person '>data-vocabulary.org/Person</abbr> (3,074 Entities) </li>
						<li> <abbr title='http://schema.org/LocalBusiness '>schema:LocalBusiness</abbr> (2,701 Entities) </li>
				</ol></td></tr>
				<tr><th> Top Properties </th>
					<td><small><a href='' onclick="document.getElementById('propsByEntities').style.display='block';this.style.display='none';return false;">Show top values</a></small>
						<ol id='propsByEntities' style='display:none'>
						<li><abbr title='http://www.w3.org/1999/02/22-rdf-syntax-ns#type'>www.w3.org/1999/02/22-rdf-syntax-ns#type</abbr>(5,636,972 Entities)</li>
						<li><abbr title='http://www.w3.org/1999/xhtml/microdata#item'>www.w3.org/1999/xhtml/microdata#item</abbr>(2,003,281 Entities)</li>
						<li><abbr title='http://purl.org/dc/terms/title'>purl.org/dc/terms/title</abbr>(1,000,366 Entities)</li>
						<li><abbr title='http://schema.org/Product/name'>schema.org/Product/name</abbr>(820,202 Entities)</li>
						<li><abbr title='http://schema.org/Product/image'>schema.org/Product/image</abbr>(792,883 Entities)</li>
						<li><abbr title='http://schema.org/Offer/price'>schema.org/Offer/price</abbr>(711,716 Entities)</li>
						<li><abbr title='http://schema.org/Product/offers'>schema.org/Product/offers</abbr>(707,317 Entities)</li>
						<li><abbr title='http://schema.org/Review/datePublished'>schema.org/Review/datePublished</abbr>(614,110 Entities)</li>
						<li><abbr title='http://schema.org/Review/author'>schema.org/Review/author</abbr>(614,059 Entities)</li>
						<li><abbr title='http://schema.org/Review/name'>schema.org/Review/name</abbr>(613,247 Entities)</li>
						<li><abbr title='http://schema.org/Product/aggregateRating'>schema.org/Product/aggregateRating</abbr>(604,359 Entities)</li>
						<li><abbr title='http://schema.org/Rating/ratingValue'>schema.org/Rating/ratingValue</abbr>(595,457 Entities)</li>
						<li><abbr title='http://schema.org/AggregateRating/ratingValue'>schema.org/AggregateRating/ratingValue</abbr>(594,723 Entities)</li>
						<li><abbr title='http://schema.org/Review/reviewRating'>schema.org/Review/reviewRating</abbr>(584,260 Entities)</li>
						<li><abbr title='http://schema.org/Rating/bestRating'>schema.org/Rating/bestRating</abbr>(576,302 Entities)</li>
						<li><abbr title='http://schema.org/Rating/worstRating'>schema.org/Rating/worstRating</abbr>(570,554 Entities)</li>
						<li><abbr title='http://schema.org/Product/review'>schema.org/Product/review</abbr>(555,175 Entities)</li>
						<li><abbr title='http://schema.org/Review/reviewBody'>schema.org/Review/reviewBody</abbr>(552,757 Entities)</li>
						<li><abbr title='http://schema.org/Review/publisher'>schema.org/Review/publisher</abbr>(517,677 Entities)</li>
						<li><abbr title='http://data-vocabulary.org/Breadcrumb/title'>data-vocabulary.org/Breadcrumb/title</abbr>(513,253 Entities)</li>
					</ol></td></tr>
					<tr><th>Detailed Statistics as Excel file</th><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/CorpusStatistics.xlsx">CorpusStatistics.xlsx</a> (40kb)</td></tr>
			</table>
		</div>
    <h3>Product Corpus and extracted Microdata downloads</h3>
    <p>
      Download access to the product corpus, its general statistics and the extracted Microdata as n-quads from the general crawl can be found at the following
       <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/crawl-data-general/">link</a>.
       Similarly, we provide the product corpus from the keyword serach crawl
        <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/crawl-data-search/">here</a>.
    </p>
    <span id="toc6"></span>
    <h2>6. Baselines</h2>

    <h3>Baselines for Product Feature Extraction</h3>
    <br/>
    <h4>Method</h4>
    <p>
    The approach makes use of the properties which are contained for the different products
    in the product catalog, described in Section 2. From this property names, we generate a dictionary,
    which we than apply to all web pages in the goldstandard. This means, whenever the name
    of the feature within the catalog occurs on the web page, we extract this as feature for the product.
    </p>
    <h4>Results</h4>
    <p>We applied the dictionary method described above for each part of our gold standard:
    (1) title and description form the markup data, (2) specification tables, and
    (3) specification list; all shown in the table below. The results show that the dictionary method does
    not perform well for each of the parts of the gold standard and improvement is needed.
    The reason for the poor performance can be found in the disparity of values coming
    from different vendors. For instance, the size of a display in our catalog are inches,
    however some of the vendors use the metric system for that measure.
    </p>
    <table>
      <tr><th colspan="4">Markup Data</th></tr>
      <tr><th>Category</th><th>Precision</th><th>Recall</th><th>F1</th></tr>
      <tr><th>Headphones</th><td>0.623</td><td>0.588</td><td>0.604</td></tr>
      <tr><th>Phones</th><td>0.601</td><td>0.452</td><td>0.515</td></tr>
      <tr><th>TVs</th><td>0.573</td><td>0.604</td><td>0.590</td></tr>
      <tr><th colspan="4">Table Specification</th></tr>
      <tr><th>Category</th><th>Precision</th><th>Recall</th><th>F1</th></tr>
      <tr><th>Headphones</th><td>0.579</td><td>0.614</td><td>0.596</td></tr>
      <tr><th>Phones</th><td>0.443</td><td>0.555</td><td>0.493</td></tr>
      <tr><th>TVs</th><td>0.521</td><td>0.658</td><td>0.581</td></tr>
      <tr><th colspan="4">List Specification</th></tr>
      <tr><th>Category</th><th>Precision</th><th>Recall</th><th>F1</th></tr>
      <tr><th>Headphones</th><td>0.436</td><td>0.512</td><td>0.494</td></tr>
      <tr><th>Phones</th><td>0.389</td><td>0.571</td><td>0.462</td></tr>
      <tr><th>TVs</th><td>0.418</td><td>0.499</td><td>0.455</td></tr>
   </table>
   <h3>Baselines for Product Matching</h3>
   <br/>
   <p>
   We experiment on 3 datasets:
   <ul>
       <li>
           Preprocessed text from the entire HTML
       </li>
       <li>
           Preprocessed name and description properties from Microdata markup
       </li>
	   <li>
			Specification tables and lists
	   </li>
   </ul>
   </p>
   <p>Common text preprocessing techniques are applied in order to reduce the number of tokens of every textual input and
   to result in filtered, richer in content unstructured and structured product specifications which will eventually contribute
   better to the identity resolution task.</p>
   <p>The preprocessing starts with the <i>removal of HTML tags</i> which do not contribute to the content of the specification. As a second step,
    <i>tokenization</i> by non-alphanumeric character is realized. Thirdly, the textual characters are converted to <i>lowercase</i> and <i>stemmed</i> using a Porter
    Stemming Filter. Finally, <i>stopwords</i> are removed. It should be mentioned that all the steps are equally implemented  in the unstructured and
    structured product specifications apart from the first step which is only realized for the unstructured specifications contained in
    the HTML pages.</p>

   <h4>Parametrization</h4>
   <p>
   We experiment with 3 different variable parameters. We take all n- grams (n ∈ [1, 2, 3]) and test on them separately. Additionally, we relax to string matching constraints by calculating the Levenshtein distance between potential matches. Lastly, we do maximum and minimum frequency pruning.
   </p>
   <h4>Similarity Methods</h4>
   <p>
   There are three main similarity methods involved in the experiments: exact string matching, Jaccard similarity and Cosine similarity. On top of the implemented
    similarity measures Levenshtein Distance can be calculated.
    <ul>
   <li>1. Simple Model: Calculation of the percentage of the common unique words in the two inputs (Exact Similarity on ngram level).
   </br><pre>i. The list of tokens are transformed to sets of unique grams
   </br>ii. The containment of the exact unique words is calculated as </br><b>commonGrams/min{UniqueGramsCatalogEntity, UniqueGramsPage}</b></pre></li>

   <li>2. TF-IDF Cosine Similarity:
   </br>
   <pre>i. The unique grams of the two inputs are assigned weights* (see the weighting section)
   </br>ii. Common words between the unique sets are retrieved
   </br>iii. Cosine Similarity is calculated as the dot product of the weights of the common words
   </br>divided by the normalization factor </pre>
   </li>
   <li>3. Jaccard: Can be applied only for the case of ngrams with n>1. The similarity score is calculated as <b>A&cap;B/A&cup;B</b></li>
   <li> Levenshtein Similarity (on top):  In order to calculate the intersection between vectors
   (unique common words) the user can define if they want exact matching between the grams or if common grams
   should be considered those with a Levenshtein similarity above a certain user defined threshold.
   The Levenshtein similarity for common grams calculation can be implemented on top of all the previously
   mentioned similarity methods.</li>
   </ul>

   <h4>Feature Extraction</h4>
   <p>
		We implement 2 feature extraction methods:
   </p>
   <ul>
	<li>Bag-of-Words (BOW): Keeping all tokens from the preprocessing</li>
	<li><a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/extracted-data/dictionary/">Dictionary method</a> (See the featrue extraction baseline)</li>
   </ul>



   <p>
   In order to evaluate the implemented similarity methods we measure precision, recall and F1 measure. For this
   we need to first define a threshold. The threshold selection is done by brute-force search for the best F1 score result
    over the set of [0,1] using a step size of 0.001.
   </p>
   <h4>Results</h4>
   <br />
   <p>
     Below we show the best results for both the BOW and Dictionary approaches.
     All results are available for download in the respective tables.
   </p>

   <h4>BOW results</h4>
   </br>
   <table>
   <tr><th>Category</th><th>Precision</th><th>Recall</th><th>F1</th></tr>
   <tr><th>Headphones</th><td>0.622</td><td>0.559</td><td>0.588</td></tr>
   <tr><th>Phones</th><td>0.298</td><td>0.668</td><td>0.412</td></tr>
   <tr><th>TVs</th><td>0.661</td><td>0.474</td><td>0.552</td></tr>
   <tr><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/baselines/Bow_Baseline_ALL.xlsx">BOW.xlsx</a>(16kb)</td></tr>
   </table>

   <h4>Dictionary results</h4>
   </br>
   <table>
   <tr><th>Category</th><th>Precision</th><th>Recall</th><th>F1</th></tr>
   <tr><th>Headphones</th><td>0.335</td><td>0.556</td><td>0.418</td></tr>
   <tr><th>Phones</th><td>0.617</td><td>0.612</td><td>0.614</td></tr>
   <tr><th>TVs</th><td>0.578</td><td>0.522</td><td>0.553</td></tr>
   <tr><td><a target="_blank" href="http://data.dws.informatik.uni-mannheim.de/productcrawl/baselines/Dictionary.xlsx">Dictionary.xlsx</a>(16kb)</td></tr>
   </table>


   <span id="toc7"></span>
   <h2>7. Extraction of Attribute-Value Pairs from Product Specifications</h2>
   <p>
   Automatically extracting specifications from HTML pages is not a
trivial task. Qui et al. have provided an analisys on product specification and concluded that technical specifications can be contained in different
HTML structures, however they are primarily found in tables
and lists.
Similar to Qui et al. [3], we employ a two step approach: First, we detect
specification tables and list in HTML pages: afterwards, we extract
attribute-values pairs from the detected product specifications. We
start by training a model for detection of specification tables and
lists. Next, we apply that model on the web pages. Subsequently,
we use a sample of the detected specifications to learn a model
for column attribute and value detection. Finally, with the learned
model we extract attribute value pairs from the specifications.
</p>
<h3>Specification Detection</h3>
<p>
As stated above product specifications
are mostly found in tables and list. Considering that HTML tables
and lists have a different base structure, we train separate classi-
fiers for detecting specification tables and lists. The models are
trained by learning a binary classifier that classifies tables/list into
specification and non-specification.
The classifiers use the following features which have also been
used previously by Qui et al. [3]: Average text length per row, number
of rows, overall frequency of the word "specification", number
of links and number of images, standard deviation of text size. In
addition to these features, we introduce the following new features
in order to improve the detection accuracy: Average DOM node
depth of the items relative to the root, average number of columns,
standard deviation of columns, maximum number of columns, number
of non table/list tags, average ratio between numerical and
alphabetical characters in a cell, and maximum number of rows.
In order to illustrate the correlation of these features with the target
attribute (specification vs. non-specification), the figure below shows
summary statistics about the evaluation dataset that we use. As it is evident from the figure, there is a clear difference
between specifications and non-specifications when considering
these features. For instance, when considering “standard deviation
of columns”, specification tables hardly deviate from a given layout,
while non-specification tables deviate form the layout much more.
Another interesting feature is the “number of non-table\list tags”
where non-specification structures contain much more tags like
“&#60;p&#62;, &#60;span&#62;” etc. than the specification ones. With that said, it is
intuitive that the binary classifier could learn a better model if both
feature sets are used.
</p>
    <figure>
      <img src="files/images/detection_charts.png" width="500"/>
      <figcaption>Figure 2: Specification vs. Non-specification table/list features
    </figure>
<h3>Specification extraction</h3>
<p>
Qui et al. [3] apply straight
forward heuristics to extract attribute-value pairs from product
specifications. Specifically, for tables they use a heuristic that, for
each table row, extracts the first cell as attribute name and the remaining
ones are extracted as concatenated values. Main limitation
of this heuristics is that it can not handle tables that have more
than two attribute name columns. Namely,
instead yielding a correct result like in Figure 3, this heuristic will
treat values in the third column as attribute values, which is obviously
incorrect . To solve this issue we train a model which can
detect whether a given column is an attribute or a value column.
Much like the detection model, we train a binary classifier with
the following features: average text length per cell, average text
length per column, number of non table tags per column, standard
deviation of text size per column, ratio between alphabetical and
numerical characters in a cell.
Taking into account that lists follow different structure (no
columns), we convert list items to columns by separating the items
by a delimiter and organise the separation result into columns. We
consider the common delimiter characters: “:” and “;”. We don’t
use delimiters like “,”, “-” , “/” and “\” since they might be a part of
a product identification numbers like MPN. After the conversion
process is done we are able to train the same model as described
above. However, like in [3], this approach falls short when the lists
do not contain any delimiter. Since the percentage of specification
with out delimiters is less than 8%, we do not pursue a solution of
this case.
After the columns have been classified, we continue with pairing
attribute with value columns, after which each attribute and value
item, row wise, is considered a pair. The pairing of columns is done
left to right, that is starting from the most left we pair the first
attribute and value columns and we continue to the right. In the
case of consecutive attribute or value columns, we concatenate
them. Figure 3 shows an example of a table with tagged attribute
and value columns, where the first and second column constitute the first attribute-value pairing, while the third and the fourth
column constitute the second attribute-value pairing.
</p>
<figure>
      <img src="files/images/extraction_example.png" width="500"/>
      <figcaption>Figure 3: Example of extracted Product Specification Table
    </figure>
<p>
Details on the methodology and the results are presented in Petrovski and Bizer available <a href="paper/attribute_value_pair_extraction_from_specification.pdf">here</a>.
</p>
<p>
Additionally, we provide the code, models and training data at the following repository: <a href="https://github.com/petrovskip/wstl-extractor">Attribute-Value Pairs Extraction</a>. Moreover, we provide extracted product attributes from specification tables and lists with aligned attribute names to the ones in the product catalog (available for download <a href="http://data.dws.informatik.uni-mannheim.de/productcrawl/product-matching-gold-standard/extracted-data/tables-aligned/">here</a>).
</p>

   <span id="toc8"></span>
   <h2>8. References</h2>
   <ol>
   	<li>Petar Petrovski, Anna Primpeli, Robert Meusel, Christian Bizer: <a href="paper/WDC-ECCatalog.pdf">Product Data Corpus and Gold Standard for Product Feature Extraction and Matching</a>. <a href="http://www.dexa.org/ecweb2016">17th International Conference on Electronic Commerce and Web Technologies</a>, Porto, Portugal, September 2016. (To Appear)</li>
    <li>Robert Meusel, Anna Primpeli, Christian Meilicke, Heiko Paulheim, Christian Bizer: <a href="">Exploiting Microdata Annotations to Consistently Categorize Product Offers at Web Scale. <a href="http://www.dexa.org/ecweb2015">16th International Conference on Electronic Commerce and Web Technologies</a></li>
   	<li>Disheng Qiu, Luciano Barbosa, Xin Luna Dong, Yanyan Shen, Divesh Srivastava: <a href="http://www.vldb.org/pvldb/vol8/p2194-qiu.pdf" target="_blank">DEXTER: Large-Scale Discovery and Extraction of Product Specifications on the Web</a>, Proceedings of the VLDB Endowment, Vol. 8, No. 13, 2015.</li>
   	<li>Hanna Köpcke, Andreas Thor, Stefan Thomas, Erhard Rahm: <a href="http://dbs.uni-leipzig.de/file/edbt2012_final.pdf" target="_blank"> Tailoring entity resolution for matching product offers</a>. In Proceedings of the 15th Int.Conf. on Extending Database Technology (EDBT), 2012.</li>
   	<li>Hanna Köpcke, Andreas Thor, Erhard Rahm: <a href="http://dbs.uni-leipzig.de/file/edbt2012_final.pdf" target="_blank"> Evaluation of entity resolution approaches on real-world match problems</a>. Proceedings of the VLDB Endowment, Volume 3 Issue 1-2, September 2010 , 2010.</li>
	 <li>Petar Ristoski, Peter Mika: <a href="http://ub-madoc.bib.uni-mannheim.de/40893/1/Ristoski%20ESWC%20paper.pdf" target="_blank">Enriching product ads with metadata from html annotations.</a> 13th Extendended Semantic Web Conference</li>
   </ol>
    <script type="text/javascript">
    $('#toc').toc({
        'selectors': 'h2', //elements to use as headings
        'container': '#toccontent', //element to find all selectors in
        'smoothScrolling': true, //enable or disable smooth scrolling on click
        'prefix': 'toc', //prefix for anchor tags and class names
        'highlightOnScroll': true, //add class to heading that is currently in focus
        'highlightOffset': 100, //offset to trigger the next headline
        'anchorName': function(i, heading, prefix) { //custom function for anchor name
            return prefix+i;
        }
    });
    $('[id*="link_"]').each(function(){
    	var element = $(this);
    	element.click(function(e) {
			e.preventDefault();
    		var id = element.attr("id").split("_")[1];
    		element.parent().removeClass("show").addClass("no-show");
    		$('#charts_'+id).removeClass("no-show").addClass("show");
    	});
    });
    $('[id*="colapse_"]').each(function(){
    	var element = $(this);
    	element.click(function(e) {
			e.preventDefault();
    		var id = element.attr("id").split("_")[1];
    		element.parent().removeClass("show").addClass("no-show");
    		$('#intro_'+id).removeClass("no-show").addClass("show");
    	});
    });
    </script>
</body>
</html>